version: '2.1'

services:
  mariadb:
      image: wodby/mariadb:$MARIADB_TAG
      container_name: "${PROJECT_NAME}_mariadb"
      stop_grace_period: 30s
      environment:
        # See all available mariadb variables at https://github.com/wodby/mariadb.
        MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
        MYSQL_DATABASE: $DB_NAME
        MYSQL_USER: $DB_USER
        MYSQL_PASSWORD: $DB_PASSWORD
      volumes:
       - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
       - project-db-data:/var/lib/mysql # I want to manage volumes manually.

  php:
    image: wodby/php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
      # See all available PHP variables at https://github.com/wodby/php.
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_TIMEZONE: Europe/London
    volumes:
      # - ./:/var/www/html
      # For macOS users (https://wodby.com/stacks/drupal/docs/local/docker-for-mac/)
      - ./:/var/www/html:cached # User-guided caching
      # - docker-sync:/var/www/html # Docker-sync

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on: 
      - php
    environment:
      # See all available NGINX variables at https://github.com/wodby/nginx.
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: "${NGINX_SERVER_ROOT}"
      NGINX_VHOST_PRESET: php
      # NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
      NGINX_SERVER_EXTRA_CONF_FILEPATH: $NGINX_SERVER_EXTRA_CONF_FILEPATH
    volumes:
      # - ./:/var/www/html
      # For macOS users (https://wodby.com/stacks/drupal/docs/local/docker-for-mac/)
      - ./:/var/www/html:cached # User-guided caching
      # - docker-sync:/var/www/html # Docker-sync
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:${PROJECT_BASE_URL}'

  redis:
    image: wodby/redis:$REDIS_TAG
    container_name: "${PROJECT_NAME}_redis"

  memcached:
    image: wodby/memcached:$MEMCACHED_TAG
    container_name: "${PROJECT_NAME}_memcached"

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - "traefik.frontend.rule=Host:mailhog.${COMPOSE_PROJECT_NAME}.docker.localhost"

  # varnish:
  #   image: wodby/drupal-varnish:$VARNISH_TAG
  #   container_name: "${PROJECT_NAME}_varnish"
  #   depends_on:
  #     - nginx
  #   environment:
  #     VARNISH_SECRET: secret
  #     VARNISH_BACKEND_HOST: nginx
  #     VARNISH_BACKEND_PORT: 80
  #   labels:
  #     - 'traefik.backend=varnish'
  #     - 'traefik.port=6081'
  #     - 'traefik.frontend.rule=Host:varnish.${PROJECT_BASE_URL}'

  adminer:
    image: wodby/adminer:$ADMINER_TAG
    container_name: "${PROJECT_NAME}_adminer"
    environment:
      ADMINER_SALT: adminer-salt
    labels:
      - 'traefik.backend=adminer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:adminer.${PROJECT_BASE_URL}'

  # solr:
  #   image: wodby/drupal-solr:$SOLR_TAG
  #   container_name: "${PROJECT_NAME}_solr"
  #   environment:
  #     SOLR_HEAP: 1024m
  #   labels:
  #     - 'traefik.backend=solr'
  #     - 'traefik.port=8983'
  #     - 'traefik.frontend.rule=Host:solr.${PROJECT_BASE_URL}'

  # elasticsearch:
  #   image: wodby/elasticsearch:$ELASTICSEARCH_TAG
  #   environment:
  #     ES_JAVA_OPTS: "-Xms500m -Xmx500m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1

  # kibana:
  #   image: wodby/kibana:$KIBANA_TAG
  #   depends_on:
  #     - elasticsearch
  #   labels:
  #     - 'traefik.backend=kibana'
  #     - 'traefik.port=5601'
  #     - 'traefik.frontend.rule=Host:kibana.php.docker.localhost'

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.${PROJECT_BASE_URL}'

  traefik:
    image: traefik
    container_name: "${PROJECT_NAME}_traefik"
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
# Docker-sync for macOS users
#  docker-sync:
#    external: true
  project-db-data:
    name: ${PROJECT_NAME}-data
   
